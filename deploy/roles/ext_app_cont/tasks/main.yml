---
# file: roles/multi_container/tasks/main.yml

- name: Run the log data container
  docker:
    docker_api_version: "{{ docker_api_version }}"
    docker_url: unix://var/run/docker.sock
    image: "{{ app_maintainer_username }}/log_data:latest"
    name: log_data
    restart_policy: on-failure
    state: reloaded

- name: Run the cache container
  docker:
    docker_api_version: "{{ docker_api_version }}"
    docker_url: unix://var/run/docker.sock
    image: "{{ app_maintainer_username }}/redis:latest"
    name: local_cache
    restart_policy: on-failure
    state: reloaded

- name: Run the web server containers
  docker:
    count: "{{ ansible_processor_vcpus }}"
    docker_api_version: "{{ docker_api_version }}"
    docker_url: unix://var/run/docker.sock
    env: "{{ conf }}"
    image: "{{ app_maintainer_username }}/{{ app_name }}:{{ app_version }}"
    links: 
      - local_cache
    restart_policy: on-failure
    state: reloaded
    volumes_from: 
      - log_data

- name: Get the running web server containers
  docker_facts:
    label: app.name={{ app_name }}
    quiet: true
    status: running

- name: Create the host nginx conf.d directory
  file:
    dest: "{{ ansible_env.HOME }}/docker/{{ app_name }}/nginx/conf.d/" 
    state: directory

- name: Build nginx upstream configuration
  template:
    src: nginx_upstream.conf.j2
    dest: "{{ ansible_env.HOME }}/docker/{{ app_name }}/nginx/conf.d/upstream.conf"

- name: Run the reverse proxy container
  docker:
    docker_api_version: "{{ docker_api_version }}"
    docker_url: unix://var/run/docker.sock
    image: "{{ app_maintainer_username }}/nginx:latest"
    links: "{{ docker_facts.containers|map(attribute='Id')|list }}"
    name: reverse_proxy
    ports: 
      - 80:80
    restart_policy: on-failure
    state: reloaded
    volumes:
      - "{{ ansible_env.HOME }}/docker/{{ app_name }}/nginx/conf.d/:/etc/nginx/conf.d:ro"
